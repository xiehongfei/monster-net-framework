#Globals Database Connection Params
#@see https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
#JDBC Driver Class Name
#这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName；
druid.driverClassName=com.mysql.jdbc.Driver

#InitialSize 默认为0；初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时；
druid.initialSize=10

#MaxActive 默认值为8；最大连接池数量；
druid.maxActive=20

#validationQuery 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
#如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
druid.validationQuery=SELECT 'x'

#MaxIdle 已废弃使用
#jdbc.maxIdle=

#最小连接池数量
druid.minIdle=10

#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，
#并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
druid.maxWait=600000

#poolPreparedStatements默认false 是否缓存preparedStatement，也就是PSCache。
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
druid.poolPreparedStatements=false

#maxPoolPreparedStatementPerConnectionSize 默认-1要启用PSCache，必须配置大于0，当大于0时，
#poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
#可以把这个数值配置大一些，比如说100
druid.maxPoolPreparedStatementPerConnectionSize=-1

#validationQueryTimeout 单位：秒，检测连接是否有效的超时时间。
#底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
druid.validationQueryTimeout=60000

#testOnBorrow 默认为true 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
druid.testOnBorrow=true

#testOnReturn默认为false 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
druid.testOnReturn=false

#testWhileIdle默认为false 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
#如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle=true

#timeBetweenEvictionRunsMillis 默认1分钟
#有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
druid.timeBetweenEvictionRunsMillis=

#minEvictableIdleTimeMillis 连接保持空闲而不被驱逐的最长时间
druid.minEvictableIdleTimeMillis=

#exceptionSorter 默认根据dbType自动识别；当数据库抛出一些不可恢复的异常时，抛弃连接
druid.exceptionSorter=

#filters
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
druid.filters=

#proxyFilters
#类型是List，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
druid.proxyFilters=